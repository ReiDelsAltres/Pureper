{
  "Questions": [
    {
      "Title": "Что такое Алгоритм?",
      "Answers": [
        "Это последовательность шагов для решения задачи",
        "Это случайный набор шагов",
        "Это любая последовательность чисел",
        "Это набор команд для компьютера",
        "Это конечный список данных"
      ]
    },
    {
      "Title": "На какие три крупных класса делятся алгоритмы?",
      "Answers": [
        "Вычислительные, информационные, управляющие",
        "Арифметические, логические, графические",
        "Простые, сложные, оптимизированные",
        "Линейные, условные, циклические",
        "Вербальные, символьные, графические"
      ]
    },
    {
      "Title": "Способы записи алгоритмов делятся на:",
      "Answers": [
        "Вербальный, символьный, графический",
        "Простой, сложный, оптимизированный",
        "Текстовой, числовой, программный",
        "Линейный, условный, циклический",
        "Арифметический, логический, графический"
      ]
    },
    {
      "Title": "Что такое языки программирования?",
      "Answers": [
        "Искусственные языки для записи алгоритмов, исполняемых ЭВМ",
        "Естественные языки, на которых разговаривают люди",
        "Языки, которые работают без компьютеров",
        "Языки, которые используются только для взлома сайтов",
        "Набор голосовых команд для управления техникой"
      ]
    },
    {
      "Title": "Какие составляющие образуют языки программирования?",
      "Answers": [
        "Алфавит, синтаксис, семантика",
        "Номера строк, алфавит, семантика",
        "Операторы, логика, компиляция",
        "Алфавит, исполнимая среда, операторы",
        "Синтаксис, арифметика, функции"
      ]
    },
    {
      "Title": "Какой язык программирования был создан для решения экономических задач?",
      "Answers": [
        "COBOL",
        "Pascal",
        "Fortran",
        "Assembler",
        "SNOBOL"
      ]
    },
    {
      "Title": "Какой язык программирования был создан для обработки символов?",
      "Answers": [
        "Lisp",
        "COBOL",
        "Fortran",
        "SNOBOL",
        "Pascal"
      ]
    },
    {
      "Title": "Какой язык программирования был создан для обработки текстовой информации?",
      "Answers": [
        "SNOBOL",
        "Lisp",
        "Assembler",
        "COBOL",
        "Fortran"
      ]
    },
    {
      "Title": "На какие классификации делятся языки программирования?",
      "Answers": [
        "Низкий, высокий, сверхвысокий",
        "Абстрактный, физический, виртуальный",
        "Низкий, базовый, универсальный",
        "Текстовый, графический, числовой",
        "Статический, динамический, случайный"
      ]
    },
    {
      "Title": "Что такое Имена в программировании?",
      "Answers": [
        "Это последовательность символов для обозначения объектов программы",
        "Это только цифры для переменных",
        "Это зарезервированные слова языка",
        "Это случайные буквы без смысла",
        "Это лишь  строки текста для вывода"
      ]
    },
    {
      "Title": "Что такое Ключевые слова в программировании?",
      "Answers": [
        "Это зарезервированные слова языка",
        "Это случайные буквы без смысла",
        "Это имена переменных",
        "Это лишь  строки текста для вывода",
        "Это любые слова в коде"
      ]
    },
    {
      "Title": "Что такое Данные в программировании?",
      "Answers": [
        "Это величины, обрабатываемые программой",
        "Это только текстовые строки",
        "Это только числа используемые в программе",
        "Это имена переменных",
        "Это результат работы  программы"
      ]
    },
    {
      "Title": "Что такое Константы в программировании?",
      "Answers": [
        "Это данные, которые не меняются во время работы",
        "Это данные, определённые в текстовом редакторе",
        "Это изменяемые данные",
        "Это данные, которые компилятор может изменять",
        "Это данные, доступные только во время компиляции"
      ]
    },
    {
      "Title": "Что такое Переменные в программировании?",
      "Answers": [
        "Данные, которые изменяются при выполнении программы",
        "Данные, чьи значения не меняются во время работы программы",
        "Это данные, определённые в текстовом редакторе",
        "Это данные, доступные только во время компиляции",
        "Это данные, которые компилятор может изменять"
      ]
    },
    {
      "Title": "Что такое Массивы в программировании?",
      "Answers": [
        "Структура для хранения однотипных элементов",
        "Структура для хранения разных типов данных",
        "Это последовательность переменных с разными именами",
        "Структура с переменным количеством элементов",
        "Структура для хранения только чисел"
      ]
    },
    {
      "Title": "Что такое Оператор в программировании",
      "Answers": [
        "Элемент описывающий действие, для выполнения",
        "Часть кода, которая не выполняет действие",
        "Это только переменная в программе",
        "Это комментарий в коде",
        "Часть программы, которая отвечает за ввод данных"
      ]
    },
    {
      "Title": "Какой тип данных может иметь несколько различных представлений?",
      "Answers": [
        "Объединение",
        "Класс",
        "Перечисление",
        "Структура",
        "Массив"
      ]
    },
    {
      "Title": "Что позволяет хранить множество обьектов одного типа данных в одном участке памяти?",
      "Answers": [
        "Массив",
        "Структура",
        "Объединение",
        "Перечисление",
        "Класс"
      ]
    },
    {
      "Title": "Как называется тип данных содержащий набор уникальны именованных констант?",
      "Answers": [
        "Перечисление",
        "Структура",
        "Массив",
        "Класс",
        "Объединения"
      ]
    },
    {
      "Title": "Что означает аббревиатура \"IDE\" в контексте программирования?",
      "Answers": [
        "Среда разработки",
        "Инструмент для работы с базами данных",
        "Протокол обмена данными",
        "Операционная система",
        "Система управления проектами"
      ]
    },
    {
      "Title": "Какой язык программирования был первым высокоуровневым языком?",
      "Answers": [
        "Plankalkül",
        "Python",
        "Java",
        "C",
        "Fortran"
      ]
    },
    {
      "Title": "Какой из языков программирования используется для веб-разработки?",
      "Answers": [
        "JavaScript",
        "Python",
        "Swift",
        "C++",
        "Pascal"
      ]
    },
    {
      "Title": "Что такое \"фреймворк\" в контексте программирования?",
      "Answers": [
        "Инструмент для разработки",
        "Тип базы данных",
        "Система управления версиями",
        "Язык программирования",
        "Протокол безопасности"
      ]
    },
    {
      "Title": "Что такое компиляция в программировании?",
      "Answers": [
        "Преобразование кода в машинный код",
        "Обработка запросов к базе данных",
        "Оптимизация работы программы",
        "Создание пользовательского интерфейса",
        "Обработка ошибок во время исполнения"
      ]
    },
    {
      "Title": "Какой язык программирования используется для разработки мобильных приложений на платформе Android?",
      "Answers": [
        "Java",
        "C#",
        "Swift",
        "Python",
        "Ruby"
      ]
    },
    {
      "Title": "Какая парадигма программирования используется в языке C++?",
      "Answers": [
        "Объектно-ориентированное программирование",
        "Реляционное программирование",
        "Логическое программирование",
        "Декларативное программирование",
        "Императивное программирование"
      ]
    },
    {
      "Title": "Какой оператор используется для выделения динамической памяти в C++?",
      "Answers": [
        "new",
        "alloc",
        "calloc",
        "create",
        "allocate"
      ]
    },
    {
      "Title": "Какой цикл используется, когда нужно повторить действие много раз?",
      "Answers": [
        "for",
        "if",
        "switch",
        "return",
        "break"
      ]
    },
    {
      "Title": "Какой цикл выполняет код, пока условие истинно?",
      "Answers": [
        "while",
        "for",
        "if",
        "switch",
        "break"
      ]
    },
    {
      "Title": "Какой цикл выполняется хотя бы один раз, даже если условие ложно?",
      "Answers": [
        "do-while",
        "while",
        "for",
        "if",
        "switch"
      ]
    },
    {
      "Title": "Какой оператор используется для выхода из цикла?",
      "Answers": [
        "break",
        "continue",
        "exit",
        "return",
        "stop"
      ]
    },
    {
      "Title": "Какой оператор пропускает текущую итерацию и переходит к следующей?",
      "Answers": [
        "continue",
        "break",
        "return",
        "exit",
        "stop"
      ]
    },
    {
      "Title": "Какой цикл используется, если известно количество повторений?",
      "Answers": [
        "for",
        "while",
        "do-while",
        "if",
        "switch"
      ]
    },
    {
      "Title": "Как правильно записать цикл for, который выполняется 5 раз?",
      "Answers": [
        "for (int i = 0; i < 5; i++)",
        "for (i = 0; i < 5)",
        "for (int i = 0; i < 5)",
        "for i = 0; i++",
        "for (i < 5)"
      ]
    },
    {
      "Title": "Какой оператор увеличивает значение переменной на 1?",
      "Answers": [
        "i++",
        "i--",
        "i+=0",
        "i-1",
        "i+1"
      ]
    },
    {
      "Title": "Какой цикл напечатает числа 1, 2, 3?",
      "Answers": [
        "for (int i = 1; i <= 3; i++)",
        "while (i < 3)",
        "if (i == 3)",
        "do-while (i < 3)",
        "return"
      ]
    },
    {
      "Title": "Что делает i-- в цикле?",
      "Answers": [
        "Уменьшает i на 1",
        "Увеличивает i на 1",
        "Обнуляет i",
        "Умножает i на 1",
        "Делит i на 2"
      ]
    },
    {
      "Title": "Какой цикл выполняется, пока условие истинно?",
      "Answers": [
        "while",
        "for",
        "switch",
        "break",
        "return"
      ]
    },
    {
      "Title": "Как записать бесконечный цикл while?",
      "Answers": [
        "while (true)",
        "whike (false)",
        "while(0)",
        "while (-1)",
        "while (i++)"
      ]
    },
    {
      "Title": "В каком цикле проверка условия идёт после выполнения кода?",
      "Answers": [
        "do-while",
        "while",
        "for",
        "return",
        "switch"
      ]
    },
    {
      "Title": "Какой цикл напечатает хотя бы одно число, даже если условие ложно?",
      "Answers": [
        "do-while",
        "for",
        "while",
        "if",
        "return"
      ]
    },
    {
      "Title": "Как правильно записать do-while?",
      "Answers": [
        "do { ... } while (условие);",
        "while (условие) { ... }",
        "for (условие) { ... }",
        "if (условие) { ... }",
        "switch (условие) { ... }"
      ]
    },
    {
      "Title": "Что такое вложенный цикл?",
      "Answers": [
        "Цикл внутри другого цикла",
        "Два отдельных цикла",
        "Цикл с оператором break",
        "Цикл с continue",
        "Бесконечный цикл"
      ]
    },
    {
      "Tags": [
        "В задании есть ошибка"
      ],
      "Title": "Бесконечный цикл",
      "Answers": [
        "Вложенный",
        "Главный",
        "Линейный",
        "Бесконечный",
        "Дополнительный"
      ]
    },
    {
      "Title": "колько раз выполнится внутренний цикл, если внешний выполняется 3 раза, а внутренний 2 раза?",
      "Answers": [
        "6",
        "2",
        "3",
        "5",
        "9"
      ]
    },
    {
      "Title": "Зачем нужны вложенные циклы?",
      "Answers": [
        "Для работы с таблицами и массивами",
        "Для выхода из программы",
        "Для создания переменных",
        "Для обработки исключений",
        "Для работы с функциями"
      ]
    },
    {
      "Title": "В каком варианте два цикла правильно вложены друг в друга?",
      "Answers": [
        "for (...) { for (...) { ... } }",
        "for (...) { ... } for (...) { ... }",
        "while (...) { for (...) { ... } }",
        "if (...) { while (...) { ... } }",
        "for (...) { while (...) { ... } }"
      ]
    },
    {
      "Title": "Какой цикл обычно используется в таблицах?",
      "Answers": [
        "Вложенный for",
        "while",
        "do-while",
        "if",
        "return"
      ]
    },
    {
      "Title": "Можно ли использовать while внутри for?",
      "Answers": [
        "Да",
        "Нет",
        "Только если while идёт после for",
        "Только если for идёт после while",
        "Только если есть оператор break"
      ]
    },
    {
      "Title": "Какой цикл можно вставить внутрь while?",
      "Answers": [
        "Любой",
        "Только for",
        "Только do-while",
        "Только while",
        "Нельзя"
      ]
    },
    {
      "Title": "Какой код имеет 'вложенный цикл'?",
      "Answers": [
        "for (true) { for (true) { ... } }",
        "while (условие) { ... }",
        "for (i = 0; i < 2; i++)",
        "if (i < 2) { while (условие) { ... } }",
        "return"
      ]
    },
    {
      "Title": "Можно ли использовать break во вложенном цикле?",
      "Answers": [
        "Да, завершится только внутренний цикл",
        "Нет",
        "Завершит все циклы сразу",
        "Только если используется continue",
        "Только в бесконечном цикле"
      ]
    },
    {
      "Title": "Какой оператор используется для проверки условия?",
      "Answers": [
        "if",
        "for",
        "while",
        "switch",
        "return"
      ]
    },
    {
      "Title": "Как записать проверку \"если x больше 10\"?",
      "Answers": [
        "if (x > 10)",
        "if x > 10",
        "if {x > 10}",
        "if [x > 10]",
        "if x => 10"
      ]
    },
    {
      "Title": "Какой символ используется для записи условия в if?",
      "Answers": [
        "()",
        "{}",
        "[]",
        "$$",
        "<>"
      ]
    },
    {
      "Title": "Что делает else в условном операторе?",
      "Answers": [
        "Выполняет код, если условие if ложно",
        "Выполняет код, если условие if истинно",
        "Запускает цикл",
        "Выводит сообщение на экран",
        "Завершает программу"
      ]
    },
    {
      "Title": "Какой оператор используется для выбора одного из нескольких вариантов?",
      "Answers": [
        "switch",
        "if",
        "while",
        "for",
        "case"
      ]
    },
    {
      "Title": "Как НЕ обозначить однострочный комментарий?",
      "Answers": [
        "^",
        "<-->",
        "#",
        "--",
        "***"
      ]
    },
    {
      "Title": "Как обозначить многострочный комментарий?",
      "Answers": [
        "<-->",
        "**",
        "#",
        "&&",
        "<>"
      ]
    },
    {
      "Title": "Какой из этих вариантов является комментарием?",
      "Answers": [
        "// Это комментарий",
        "Это комментарий",
        "/* Это комментарий //",
        "<--Это комментарий-->",
        "-- Это комментарий"
      ]
    },
    {
      "Title": "Зачем нужны комментарии?",
      "Answers": [
        "Чтобы пояснять код",
        "Чтобы ускорять программу",
        "Чтобы программа работала быстрее",
        "Чтобы убрать ошибки",
        "Чтобы компилятор их выполнял"
      ]
    },
    {
      "Title": "Какие комментарии игнорируются компилятором?",
      "Answers": [
        "Все",
        "Только многострочные",
        "Только однострочные",
        "Никакие",
        "Только те, что начинаются с ##"
      ]
    },
    {
      "Title": "Как называется ошибка, когда программа не компилируется?",
      "Answers": [
        "Синтаксическая",
        "Логическая",
        "Ошибка ввода",
        "Ошибка вывода",
        "Ошибка загрузки"
      ]
    },
    {
      "Title": "Как называется ошибка, когда программа компилируется, но работает неправильно?",
      "Answers": [
        "Логическая",
        "Синтаксическая",
        "Ошибка компиляции",
        "Ошибка процессора",
        "Ошибка памяти"
      ]
    },
    {
      "Title": "Что произойдёт, если написать if (5 = x) в C++?",
      "Answers": [
        "Ошибка компиляции",
        "Ошибка выполнения",
        "Программа зависнет",
        "x станет равен 5",
        "Будет бесконечный цикл"
      ]
    },
    {
      "Title": "Какая ошибка приводит к аварийному завершению программы во время её выполнения?",
      "Answers": [
        "Ошибка времени выполнения",
        "Синтаксическая ошибка",
        "Ошибка компиляции",
        "Логическая ошибка",
        "Логическая ошибка"
      ]
    },
    {
      "Title": "Какой из этих вариантов вызовет ошибку компиляции?",
      "Answers": [
        "Пропущенная точка с запятой",
        "Неверный вывод на экран",
        "Ошибочный ввод пользователя",
        "Ошибка в логике программы",
        "Медленная работа кода"
      ]
    },
    {
      "Title": "Какой символ используется для обозначения операторов сравнения?",
      "Answers": [
        "==",
        "=",
        ":=",
        "===",
        "!=="
      ]
    },
    {
      "Title": "Что делает оператор !=?",
      "Answers": [
        "Проверяет, не равны ли значения",
        "Проверяет, равны ли значения",
        "Присваивает значение",
        "Создаёт переменную",
        "Вызывает ошибку"
      ]
    },
    {
      "Title": "Какой оператор используется для объединения нескольких условий?",
      "Answers": [
        "&&",
        "||",
        "^^",
        "??",
        "##"
      ]
    },
    {
      "Title": "Какой из этих примеров правильно проверяет, что число x находится в диапазоне от 1 до 10?",
      "Answers": [
        "if (x >= 1 && x <= 10)",
        "if (1 <= x <= 10)",
        "if (x => 1 && x =< 10)",
        "if (x > 1 && x < 10)",
        "if (x >= 1 || x <= 10)"
      ]
    },
    {
      "Title": "Что произойдёт, если в if написать просто if (0)?",
      "Answers": [
        "Код внутри if не выполнится",
        "Будет ошибка",
        "Код выполнится",
        "Программа завершится",
        "Компилятор выдаст предупреждение"
      ]
    },
    {
      "Title": "Какое ключевое слово используется для завершения switch?",
      "Answers": [
        "break",
        "stop",
        "exit",
        "end",
        "return"
      ]
    },
    {
      "Title": "Как называется ошибка, при которой код зацикливается?",
      "Answers": [
        "Бесконечный цикл",
        "Синтаксическая ошибка",
        "Ошибка компиляции",
        "Ошибка памяти",
        "Ошибка данных"
      ]
    },
    {
      "Title": "Что неправильно в if (x = 10), и как это исправить?",
      "Answers": [
        "Нужно заменить = на ==",
        "Ошибки нет, код работает правильно",
        "Нужно заменить = на =>, то есть if (x => 10)",
        "Нужно использовать ===, то есть if (x === 10)",
        "Нужно поменять местами x и 10, то есть if (10 = x)"
      ]
    },
    {
      "Title": "Какая конструкция используется для проверки нескольких условий подряд?",
      "Answers": [
        "if - else if - else",
        "switch - case",
        "for - while",
        "return - break",
        "do - while"
      ]
    },
    {
      "Tags": [
        "Некритичная ошибка"
      ],
      "Title": "Какой оператор сравнения используется для проверки, что одно число больше другого?",
      "Answers": [
        ">",
        "<",
        "==",
        "&&",
        "||"
      ]
    },
    {
      "Title": "Что такое массив в C++?",
      "Answers": [
        "Коллекция элементов одного типа",
        "Файл с данными",
        "Переменная, хранящая несколько типов данных",
        "Объект класса",
        "Указатель на структуру"
      ]
    },
    {
      "Title": "Как объявить массив целых чисел из 5 элементов?",
      "Answers": [
        "int arr[5];",
        "array<int> arr(5);",
        "int arr = {5};",
        "int[5] arr;",
        "int arr = new int[5];"
      ]
    },
    {
      "Title": "Как обратиться к первому элементу массива int arr[3] = {1, 2, 3};?",
      "Answers": [
        "arr[0]",
        "arr[1]",
        "arr.first()",
        "arr.at(0)",
        "arr.begin()"
      ]
    },
    {
      "Title": "Как узнать размер массива int arr[10];?",
      "Answers": [
        "sizeof(arr) / sizeof(arr[0])",
        "arr.size()",
        "length(arr)",
        "sizeof(arr)",
        "sizeof(arr) / 10"
      ]
    },
    {
      "Title": "Какой диапазон индексов имеет массив int arr[5];?",
      "Answers": [
        "От 0 до 4",
        "От 1 до 5",
        "От 0 до 5",
        "От -1 до 3",
        "От 1 до 6"
      ]
    },
    {
      "Title": "Что произойдет при выходе за границы массива?",
      "Answers": [
        "Непредсказуемое поведение",
        "Компилятор выдаст ошибку",
        "Программа завершится с ошибкой",
        "Значение будет равно 0",
        "Создастся новый элемент массива"
      ]
    },
    {
      "Title": "Как передать массив в функцию?",
      "Answers": [
        "По указателю или ссылке",
        "По значению",
        "Как vector<int>",
        "Как std::array",
        "Используя new"
      ]
    },
    {
      "Title": "Чем отличается std::array от обычного массива?",
      "Answers": [
        "Имеет методы класса и фиксированный размер",
        "Может менять размер динамически",
        "Используется только с указателями",
        "Хранит данные в динамической памяти",
        "Требует new для работы"
      ]
    },
    {
      "Tags": [
        "В задании есть ошибка"
      ],
      "Title": "Как скопировать массив A в массив B?",
      "Answers": [
        "std::copy(A, A + size, B);",
        "B = A;",
        "memcpy(B, A, sizeof(A));",
        "B.assign(A);",
        "B = std::copy(A);"
      ]
    },
    {
      "Tags": [
        "В задании есть ошибка"
      ],
      "Title": "Как создать двумерный массив 3x3?",
      "Answers": [
        "int arr[3][3];",
        "int arr[3,3];",
        "vector<vector<int>> arr(3, vector<int>(3));",
        "array<array<int,3>,3> arr;",
        "int arr = new int[3][3];"
      ]
    },
    {
      "Title": "Как инициализировать массив значениями 1, 2, 3?",
      "Answers": [
        "int arr[] = {1, 2, 3};",
        "int arr[3] = 1, 2, 3;",
        "array<int, 3> arr = {1, 2, 3};",
        "vector<int> arr = {1, 2, 3};",
        "int* arr = new int[3]{1, 2, 3};"
      ]
    },
    {
      "Title": "Как удалить динамический массив int* arr = new int[10];?",
      "Answers": [
        "delete[] arr;",
        "delete arr;",
        "free(arr);",
        "arr.~int();",
        "clear(arr);"
      ]
    },
    {
      "Title": "Как объявить массив строк?",
      "Answers": [
        "std::string arr[5];",
        "char arr[5][100];",
        "char* arr[5];",
        "array<string, 5> arr;",
        "vector<string> arr(5);"
      ]
    },
    {
      "Title": "Как отсортировать массив int arr[5] = {4, 2, 5, 1, 3};?",
      "Answers": [
        "std::sort(arr, arr + 5);",
        "arr.sort();",
        "sort(arr.begin(), arr.end());",
        "arr = sort(arr);",
        "std::sort(arr.begin(), arr.end());"
      ]
    },
    {
      "Title": "Как вывести все элементы массива arr?",
      "Answers": [
        "for (int i = 0; i < size; i++) cout << arr[i];",
        "cout << arr;",
        "std::print(arr);",
        "arr.print();",
        "std::cout << *arr;"
      ]
    },
    {
      "Title": "Как получить последний элемент массива int arr[5];?",
      "Answers": [
        "arr[4]",
        "arr[-1]",
        "arr.back()",
        "arr.at(4)",
        "arr[sizeof]"
      ]
    },
    {
      "Title": "Что вернет sizeof(arr) для int arr[10];?",
      "Answers": [
        "40 (если int = 4 байта)",
        "10",
        "4",
        "sizeof(int)",
        "Размер первого элемента"
      ]
    },
    {
      "Title": "Как найти максимальный элемент в массиве?",
      "Answers": [
        "std::max_element(arr,arr + size);",
        "max(arr);",
        "arr.max();",
        "std::maximum(arr);",
        "arr.sort(); arr[size-1];"
      ]
    },
    {
      "Title": "Как работает std::vector в сравнении с массивом?",
      "Answers": [
        "Динамический размер",
        "Фиксированный размер",
        "Хранится на стеке",
        "Не поддерживает индексирование",
        "Требует malloc() для выделения памяти"
      ]
    },
    {
      "Title": "Как очистить std::vector<int> v;?",
      "Answers": [
        "v.clear();",
        "delete[] v;",
        "v = {};",
        "v.erase();",
        "free(v);"
      ]
    },
    {
      "Title": "Какой оператор используется в C++ для получения возвращаемого значения?",
      "Answers": [
        "return",
        "let",
        "continue",
        "ref",
        "yield"
      ]
    },
    {
      "Title": "Функция с каким типом не обязана использовать оператор \"return\" в C++?",
      "Answers": [
        "void",
        "null_ptr",
        "nullable",
        "std::cout",
        "Void"
      ]
    },
    {
      "Title": "Как называются функции с одним и тем же названием, но разными формальными параметрами в одном пространстве имён C++?",
      "Answers": [
        "Перегруженными",
        "Перезаписанными",
        "Переопределёнными",
        "Паралельными",
        "Асинхронными"
      ]
    },
    {
      "Title": "Как называются по терминалогии параметры передаваемые функции?",
      "Answers": [
        "Аргументы",
        "Значения",
        "Данные",
        "Информация",
        "не-членными"
      ]
    },
    {
      "Title": "Какое ключевое слово указывает что возвращаемое значение функции будет определенно во время компиляции в C++?",
      "Answers": [
        "constexpr",
        "compl",
        "extern",
        "intern",
        "inline"
      ]
    },
    {
      "Title": "Как называется функция определённая в глобальном пространстве имён C++?",
      "Answers": [
        "Бесплатная",
        "Транслируемая",
        "Глобальная",
        "Внутреннаяя",
        "Внешняя"
      ]
    },
    {
      "Title": "Какое ключевое слово используется для Спецификации компоновки в C++?",
      "Answers": [
        "extern",
        "constexpr",
        "noexcept",
        "volatile",
        "virtual"
      ]
    },
    {
      "Title": "Какое ключевое слово указывает компилятору заменить каждый вызов функции самим кодом функции C++?",
      "Answers": [
        "inline",
        "volatile",
        "override",
        "static",
        "virtual"
      ]
    },
    {
      "Title": "Какое ключевое слово используется для спецификации исключений в C++?",
      "Answers": [
        "noexcept",
        "const",
        "volatile",
        "malcom",
        "throw"
      ]
    },
    {
      "Tags": [
        "В задании есть ошибка"
      ],
      "Title": "Какое ключевое слово возможно использовать только с методами в C++?",
      "Answers": [
        "volatile",
        "noexcept",
        "extern",
        "internal",
        "inline"
      ]
    },
    {
      "Title": "Какое ключевое слово указывает что функцию можно переопределить в производном классе в C++?",
      "Answers": [
        "virtual",
        "static",
        "ref",
        "volatile",
        "override"
      ]
    },
    {
      "Title": "Какое ключевое слово указывает что функция переопределена в C++?",
      "Answers": [
        "override",
        "virtual",
        "static",
        "volatile",
        "inline"
      ]
    },
    {
      "Title": "Где находится \"Конечный возвращаемый тип\" в C++?",
      "Answers": [
        "Слева от сигнатуры",
        "Предшествует оператору ->",
        "Справа от сигнатуры",
        "Внутри блока функции",
        "После return"
      ]
    },
    {
      "Title": "Какое ключевое слово используется для объявления псевдонима для типа указателя функции в C++?",
      "Answers": [
        "typedef",
        "alias",
        "template",
        "typefun",
        "let"
      ]
    },
    {
      "Title": "Как называется ключевое слово которое вызывает \"Встроенное расширение\" в C++?",
      "Answers": [
        "_inline",
        "_volatile",
        "insert",
        "explicit",
        "implicit"
      ]
    },
    {
      "Title": "Как называется поиск имен функций с зависимостью от аргументов в C++?",
      "Answers": [
        "Koenig",
        "Eierach",
        "POD",
        "COM",
        "Uterly"
      ]
    },
    {
      "Tags": [
        "В задании есть ошибка"
      ],
      "Title": "Что позволяет перегружать метод в C++?",
      "Answers": [
        "Ссылочный классификатор",
        "Операционный указатель",
        "Конструктор",
        "Перегружающий оператор",
        "Переопределяющий оператор"
      ]
    },
    {
      "Title": "Какое ключевое слово заменяет функционал \"скрытия\" для метода в C++?",
      "Answers": [
        "virtual",
        "volatile",
        "override",
        "new",
        "implicit new"
      ]
    },
    {
      "Tags": [
        "В задании есть ошибка"
      ],
      "Title": "Как называется метод который должен быть переопределён в производных классах в C++?",
      "Answers": [
        "Виртуальным",
        "Абстрактным",
        "Публичным",
        "Статическим",
        "Наследуемым"
      ]
    },
    {
      "Title": "Какие из объекты имеют внутреннюю компоновку по умолчанию в C++?",
      "Answers": [
        "Все объекты",
        "Объекты constexp",
        "Объекты extern",
        "Объекты extern const",
        "Объекты volatile"
      ]
    },
    {
      "Title": "Что такое объект в C++?",
      "Answers": [
        "Экземпляр класса",
        "Переменная, хранящая данные",
        "Тип  данных",
        "Функция",
        "Массив данных"
      ]
    },
    {
      "Title": "Как создается объект в C++?",
      "Answers": [
        "Через инстанцирование класса",
        "С помощью оператора new",
        "С помощью оператора delete",
        "Через вызов конструктора",
        "Через использование функции malloc"
      ]
    },
    {
      "Title": "Что такое конструктор объекта?",
      "Answers": [
        "Функция, выполняющая инициализацию объекта",
        "Функция, которая выделяет память для объекта",
        "Функция, освобождающая память для объекта",
        "Переменная объекта",
        "Метод, выполняющий все вычисления для объекта"
      ]
    },
    {
      "Title": "Что такое деструктор в C++?",
      "Answers": [
        "Функция, освобождающая ресурсы объекта",
        "Функция, выделяющая память для объекта",
        "Функция, инициализирующая объект",
        "Функция, создающая объект",
        "Переменная, указывающая на объект"
      ]
    },
    {
      "Title": "Какой из следующих операторов используется для создания объекта в динамической памяти?",
      "Answers": [
        "new",
        "delete",
        "malloc",
        "free",
        "create"
      ]
    },
    {
      "Title": "Как называется механизм, при котором объект класса может создавать другие объекты этого же класса?",
      "Answers": [
        "Конструктор",
        "Наследование",
        "Инкапсуляция",
        "Полиморфизм",
        "Дружественные функции"
      ]
    },
    {
      "Title": "Что такое инкапсуляция в C++?",
      "Answers": [
        "Механизм, скрывающий детали реализации объекта",
        "Способ доступа к приватным данным объекта",
        "Механизм, при котором класс может быть расширен",
        "Механизм связи объектов",
        "Механизм, изменяющий поведение объекта"
      ]
    },
    {
      "Tags": [
        "В задании есть ошибка"
      ],
      "Title": "Какой из этих вариантов позволяет ограничить доступ к свойствам объекта в C++?",
      "Answers": [
        "protected",
        "public",
        "private",
        "static",
        "virtual"
      ]
    },
    {
      "Title": "Что такое статический объект в C++?",
      "Answers": [
        "Которые определяется ключевым словом static",
        "Создающийся при каждом вызове функции",
        "Который удаляется после завершения функции",
        "Доступный только в определенной области видимости",
        "Который не имеет состояний"
      ]
    },
    {
      "Title": "Какой из этих типов данных не может быть членом класса в C++?",
      "Answers": [
        "const",
        "int",
        "float",
        "указатель",
        "массив"
      ]
    },
    {
      "Title": "Как в C++ определяется конструктор копирования?",
      "Answers": [
        "Функция, которая создает объект на основе другого",
        "Функция, которая возвращает ссылку на объект",
        "Функция, которая инициализирует объект значением",
        "Функция, которая удаляет объект",
        "Функция, которая изменяет состояние объекта"
      ]
    },
    {
      "Title": "Какой из этих методов является методом класса в C++?",
      "Answers": [
        "Все перечисленное",
        "Статический метод",
        "Конструктор",
        "Деструктор",
        "Метод расширения"
      ]
    },
    {
      "Title": "Какая из следующих характеристик относится к свойствам объекта?",
      "Answers": [
        "Могут быть как открытыми, так и скрытыми",
        "Уникальный идентификатор",
        "Всегда должны быть константными",
        "Не могут изменяться",
        "Всегда должны быть статическими"
      ]
    },
    {
      "Title": "Что происходит, когда вызывается деструктор объекта?",
      "Answers": [
        "Объект уничтожается, и память, освобождается",
        "Все поля инициализируются значениями по умолчанию",
        "Объект создает новый объект",
        "Объект вызывает свой конструктор",
        "Поля очищаются, но память не освобождается"
      ]
    },
    {
      "Title": "Можно ли изменить значение приватного свойства объекта извне класса в C++?",
      "Answers": [
        "Да, если используется friend-функция",
        "Да, если используется getter",
        "Нет, нельзя",
        "Да, если использовать указатели",
        "Да, если свойство имеет модификатор public"
      ]
    },
    {
      "Title": "Что такое полиморфизм в контексте объектов в C++?",
      "Answers": [
        "Способность принимать множество форм",
        "Возможность изменять значение полей",
        "Механизм, позволяющий скрывать детали",
        "Возможность взаимодействовать друг с другом",
        "Способность изменять поведение"
      ]
    },
    {
      "Title": "Что из следующего является примером композиции в C++?",
      "Answers": [
        "Объект другого класса как член",
        "Указатель на другой объект",
        "Наследует другой класс",
        "Имеет статический метод",
        "Создает множество экземпляров одного и того же типа"
      ]
    },
    {
      "Title": "Как можно уничтожить объект, созданный с помощью оператора new?",
      "Answers": [
        "delete или delete[]",
        "delete только",
        "free и malloc",
        "free",
        "delete[] только"
      ]
    },
    {
      "Title": "Что такое mutable-поле в C++?",
      "Answers": [
        "Которое можно изменять ",
        "Остается неизменным",
        "Статическое",
        "Имеет конструктор",
        "Хранит указатель на переменную"
      ]
    },
    {
      "Title": "Какие особенности имеют объекты в C++?",
      "Answers": [
        "Могут иметь методы и свойства",
        "Не могут изменятся",
        "Не могут быть переданы в функции",
        "Всегда создаются в статической памяти",
        "Всегда высвобождаются trash collector-ом"
      ]
    },
    {
      "Title": "Какой заголовочный файл необходим для работы с файлами в C++?",
      "Answers": [
        "<fstream>",
        "<iostream>",
        "<stdio.h>",
        "<fstream.h>",
        "<file.h>"
      ]
    },
    {
      "Title": "Какую функцию следует использовать для открытия файла в режиме чтения?",
      "Answers": [
        "ifstream.open()",
        "ofstream.open()",
        "fstream.open()",
        "ofstream.read()",
        "ifstream.read()"
      ]
    },
    {
      "Title": "Какой режим открывает файл для записи, но если файл существует, его содержимое будет перезаписано?",
      "Answers": [
        "ios::out",
        "ios::in",
        "ios::app",
        "ios::trunc",
        "ios::ate"
      ]
    },
    {
      "Title": "Что означает режим ios::app при открытии файла?",
      "Answers": [
        "Запись",
        "Перезапись",
        "Чтение",
        "Запись и чтение",
        "Открывает бинарный файл"
      ]
    },
    {
      "Tags": [
        "В задании есть ошибка"
      ],
      "Title": "Какой тип потока используется для записи данных в файл?",
      "Answers": [
        "filestream",
        "ifstream",
        "fstream",
        "ostream",
        "ioutput"
      ]
    },
    {
      "Title": "Как можно проверить, был ли успешно открыт файл?",
      "Answers": [
        "file.is_open()",
        "file.is_opened()",
        "file.isOpened()",
        "file.opened()",
        "file.open()"
      ]
    },
    {
      "Title": "Какой метод используется для записи данных в файл в C++?",
      "Answers": [
        "write()",
        "put()",
        "write_to_file()",
        "flush()",
        "putchar()"
      ]
    },
    {
      "Title": "Что произойдёт, если попытаться открыть файл с флагом ios::in и файл не существует?",
      "Answers": [
        "Программа завершится с ошибкой",
        "Файл будет создан автоматически",
        "Поток будет открыт для записи",
        "Поток не будет открыт, но ошибок не возникнет",
        "Файл откроется для записи"
      ]
    },
    {
      "Title": "Какой из этих методов используется для закрытия файла в C++?",
      "Answers": [
        "close()",
        "shutdown()",
        "end()",
        "flush()",
        "end_stream()"
      ]
    },
    {
      "Title": "Какой класс является базовым для потоков ввода и вывода в C++?",
      "Answers": [
        "iostream",
        "ostream",
        "istream",
        "ifstream",
        "fstream"
      ]
    },
    {
      "Title": "Какой модификатор используется для открытия файла в бинарном режиме?",
      "Answers": [
        "ios::binary",
        "ios::text",
        "ios::open",
        "ios::input",
        "ios::output"
      ]
    },
    {
      "Title": "Какой метод C++ используется для того, чтобы получить текущую позицию в файле?",
      "Answers": [
        "tellg()",
        "tell()",
        "getpos()",
        "current()",
        "position()"
      ]
    },
    {
      "Tags": [
        "Некритичная ошибка"
      ],
      "Title": "Какой тип исключения выбрасывается, если файл не может быть открыт?",
      "Answers": [
        "ios_base::failure",
        "std::exception",
        "std::exception",
        "std::invalid_argument",
        "std::out_of_range"
      ]
    },
    {
      "Title": "Как избежать исключений при работе с файлами в C++?",
      "Answers": [
        "Проверять состояние потока с помощью fail()",
        "Использовать try-catch",
        "Использовать exceptions::ignore()",
        "Использовать try()",
        "Отключить исключения для файлов"
      ]
    },
    {
      "Title": "Что такое \"исключения\" в C++?",
      "Answers": [
        "Механизм обработки ошибок",
        "Структуры для обработки ошибок",
        "Типы данных математических операций",
        "Типы файлов для чтения",
        "Типы данных для потоков"
      ]
    },
    {
      "Title": "Какой оператор в C++ используется для выбрасывания исключения?",
      "Answers": [
        "throw",
        "raise",
        "error",
        "exception",
        "interrupt"
      ]
    },
    {
      "Title": "Что произойдёт, если в блоке try не будет найдено подходящего обработчика исключений?",
      "Answers": [
        "Программа завершится с ошибкой",
        "Программа продолжит выполнение",
        "Исключение будет передано блоку try",
        "Исключение будет обработано в блоке finally",
        "Программа будет ожидать обработки ошибки"
      ]
    },
    {
      "Title": "Что обозначает метод flush() в потоке?",
      "Answers": [
        "Он очищает буфер, записывает данные в файл.",
        "Он закрывает файл.",
        "Он удаляет содержимое файла.",
        "Он отменяет последнюю операцию записи.",
        "Он блокирует поток до завершения записи."
      ]
    },
    {
      "Title": "Каким образом можно проверить, что файл открыт с ошибкой после попытки его открытия?",
      "Answers": [
        "Проверить на file.fail()",
        "Проверить на !file.good()",
        "Проверить на file.is_open()",
        "Проверить на file.eof()",
        "Проверить на file.read()"
      ]
    },
    {
      "Tags": [
        "В задании есть ошибка"
      ],
      "Title": "Какой метод используется для чтения данных из файла в C++?",
      "Answers": [
        "operator>>",
        "read()",
        "get()",
        "getline()",
        "input()"
      ]
    },
    {
      "Title": "Какой язык программирования относится к низкоуровневым?",
      "Answers": [
        "Ассемблер",
        "Python",
        "JavaScript",
        "Java",
        "Ruby"
      ]
    },
    {
      "Title": "Что характерно для языков высокого уровня?",
      "Answers": [
        "Простота в написании кода",
        "Близость к машинному коду",
        "Использование мнемоник вместо команд",
        "Низкая переносимость",
        "Прямое управление памятью"
      ]
    },
    {
      "Title": "Какой язык программирования считается самым низкоуровневым?",
      "Answers": [
        "Машинный код",
        "C++",
        "Python",
        "Java",
        "PHP"
      ]
    },
    {
      "Title": "В каком языке программирования используются мнемоники вместо двоичного кода?",
      "Answers": [
        "Ассемблер",
        "C#",
        "JavaScript",
        "Kotlin",
        "Swift"
      ]
    },
    {
      "Title": "Что является преимуществом языков высокого уровня?",
      "Answers": [
        "Кроссплатформенность",
        "Высокая скорость выполнения",
        "Максимальная оптимизация работы с памятью",
        "Непосредственное управление процессором",
        "Использование машинных инструкций напрямую"
      ]
    },
    {
      "Title": "Какой язык программирования является промежуточным между низким и высоким уровнем?",
      "Answers": [
        "C",
        "Python",
        "HTML",
        "JavaScript",
        "TypeScript"
      ]
    },
    {
      "Title": "Какой язык программирования ближе всего к железу?",
      "Answers": [
        "Ассемблер",
        "Java",
        "Python",
        "C#",
        "PHP"
      ]
    },
    {
      "Title": "Какой основной недостаток языков низкого уровня?",
      "Answers": [
        "Сложность в изучении и разработке",
        "Высокая производительность",
        "Легкость написания кода",
        "Автоматическое управление памятью",
        "Кроссплатформенность"
      ]
    },
    {
      "Title": "Какой язык программирования считается высокоуровневым?",
      "Answers": [
        "Python",
        "Ассемблер",
        "Машинный код",
        "C",
        "Rust"
      ]
    },
    {
      "Title": "Какой язык программирования низкого уровня применялся при создании первых компьютеров?",
      "Answers": [
        "Ассемблер",
        "Java",
        "Python",
        "JavaScript",
        "Swift"
      ]
    },
    {
      "Title": "В чем основное преимущество низкоуровневых языков?",
      "Answers": [
        "Высокая производительность",
        "Простота написания кода",
        "Автоматическое управление памятью",
        "Кроссплатформенность",
        "Отсутствие необходимости компиляции"
      ]
    },
    {
      "Title": "Какой язык программирования имеет самый сложный синтаксис?",
      "Answers": [
        "Ассемблер",
        "Python",
        "JavaScript",
        "Swift",
        "Kotlin"
      ]
    },
    {
      "Title": "Какие языки программирования легче изучать?",
      "Answers": [
        "Высокоуровневые",
        "Низкоуровневые",
        "Ассемблерные",
        "Машинный код",
        "Языки с прямым управлением памятью"
      ]
    },
    {
      "Title": "Какой язык программирования можно использовать для написания драйверов устройств?",
      "Answers": [
        "C",
        "Python",
        "Java",
        "PHP",
        "Ruby"
      ]
    },
    {
      "Title": "Что является главным недостатком высокоуровневых языков?",
      "Answers": [
        "Медленная скорость выполнения",
        "Сложность кода",
        "Прямое управление памятью",
        "Отсутствие автоматической обработки ошибок",
        "Ограниченная применимость"
      ]
    },
    {
      "Title": "Какой язык программирования используется для программирования микроконтроллеров?",
      "Answers": [
        "Ассемблер",
        "Python",
        "JavaScript",
        "PHP",
        "TypeScript"
      ]
    },
    {
      "Title": "Какой язык программирования является универсальным и применяется во многих сферах?",
      "Answers": [
        "C",
        "HTML",
        "SQL",
        "Ассемблер",
        "Bash"
      ]
    },
    {
      "Title": "В каком языке программирования нет необходимости вручную управлять памятью?",
      "Answers": [
        "Python",
        "C",
        "Ассемблер",
        "Машинный код",
        "Rust"
      ]
    },
    {
      "Title": "Что является основным преимуществом ассемблера?",
      "Answers": [
        "Высокая скорость выполнения программ",
        "Простота написания кода",
        "Кроссплатформенность",
        "Автоматическое управление памятью",
        "Интуитивно понятный синтаксис"
      ]
    },
    {
      "Title": "В каком языке программирования команды записываются в двоичном виде?",
      "Answers": [
        "Машинный код",
        "Python",
        "JavaScript",
        "C++",
        "PHP"
      ]
    },
    {
      "Title": "Что такое транслятор?",
      "Answers": [
        "Программа, переводящая код на язык машины",
        "Устройство для передачи данных",
        "Язык программирования",
        "Файл с кодом программы",
        "Операционная система"
      ]
    },
    {
      "Title": "Для чего нужен транслятор?",
      "Answers": [
        "Чтобы компьютер понял код программы",
        "Чтобы рисовать картинки",
        "Чтобы играть в игры",
        "Чтобы выключать компьютер",
        "Чтобы писать текст"
      ]
    },
    {
      "Title": "Какие бывают трансляторы?",
      "Answers": [
        "Компилятор и интерпретатор",
        "Диспетчер и регистратор",
        "Браузер и антивирус",
        "Видеокарта и процессор",
        "Драйвер и библиотека"
      ]
    },
    {
      "Title": "Что делает компилятор?",
      "Answers": [
        "Переводит код в машинный язык перед запуском",
        "Исполняет код сразу, строка за строкой",
        "Проверяет орфографию в тексте",
        "Открывает файлы",
        "Работает с картинками"
      ]
    },
    {
      "Title": "Что делает интерпретатор?",
      "Answers": [
        "Переводит код во время выполнения программы",
        "Создает исполняемый файл перед запуском",
        "Проверяет код на ошибки",
        "Управляет памятью компьютера",
        "Ускоряет интернет"
      ]
    },
    {
      "Title": "Какой язык понимает компьютер?",
      "Answers": [
        "Машинный код",
        "Английский",
        "Python",
        "Java",
        "HTML"
      ]
    },
    {
      "Title": "Почему программисты не пишут сразу на машинном языке?",
      "Answers": [
        "Он сложный для понимания",
        "Компьютеры его не понимают",
        "Он слишком быстрый",
        "Он похож на русский язык",
        "Он не работает на Windows"
      ]
    },
    {
      "Title": "Как переводится программа в машинный код?",
      "Answers": [
        "С помощью компилятора или интерпретатора",
        "Автоматически, без программ",
        "Только вручную",
        "С помощью текстового редактора",
        "Через интернет"
      ]
    },
    {
      "Title": "Что быстрее: компилятор или интерпретатор?",
      "Answers": [
        "Компилятор",
        "Интерпретатор",
        "Оба одинаково",
        "Зависит от компьютера",
        "Ни один не нужен"
      ]
    },
    {
      "Title": "Какой язык программирования использует компилятор?",
      "Answers": [
        "C++",
        "Python",
        "JavaScript",
        "HTML",
        "SQL"
      ]
    },
    {
      "Title": "Какой язык программирования использует интерпретатор?",
      "Answers": [
        "Python",
        "C++",
        "Java",
        "C",
        "Rust"
      ]
    },
    {
      "Title": "Что получается после работы компилятора?",
      "Answers": [
        "Исполняемый файл",
        "Текстовый документ",
        "Графический интерфейс",
        "Ошибка",
        "Таблица"
      ]
    },
    {
      "Title": "Что происходит, если в программе есть ошибка?",
      "Answers": [
        "Компилятор или интерпретатор выдаст сообщение об ошибке",
        "Компьютер выключится",
        "Программа все равно запустится",
        "Ничего, ошибки не влияют на код",
        "Программа автоматически исправит ошибку"
      ]
    },
    {
      "Title": "Можно ли исправить ошибки перед запуском программы?",
      "Answers": [
        "Да, можно исправить код",
        "Нет, ошибки исправляются только после запуска",
        "Компьютер исправляет их сам",
        "Ошибки нельзя исправлять",
        "Ошибки появляются только в играх"
      ]
    },
    {
      "Title": "Почему Python называют интерпретируемым языком?",
      "Answers": [
        "Его код выполняется строка за строкой во время работы",
        "Он очень быстрый",
        "Он компилируется перед запуском",
        "Он не требует интерпретатора",
        "Он используется только для веб-разработки"
      ]
    },
    {
      "Title": "Почему C++ называют компилируемым языком?",
      "Answers": [
        "Его код переводится в машинный язык перед запуском",
        "Он выполняется строка за строкой",
        "Он не требует компиляции",
        "Он работает только в браузере",
        "Он не поддерживает переменные"
      ]
    },
    {
      "Title": "Что делает JIT-компилятор?",
      "Answers": [
        "Переводит код во время выполнения",
        "Компилирует код перед запуском программы",
        "Проверяет ошибки в тексте",
        "Работает только в Python",
        "Устанавливает обновления"
      ]
    },
    {
      "Title": "Как называется программа, которая выполняет байт-код?",
      "Answers": [
        "Виртуальная машина",
        "Антивирус",
        "Текстовый редактор",
        "Диспетчер задач",
        "Видеокарта"
      ]
    },
    {
      "Title": "Что происходит, если компилятор находит ошибку?",
      "Answers": [
        "Программа не запустится",
        "Компьютер выключится",
        "Ошибка исправится автоматически",
        "Код сработает, но неправильно",
        "Код станет быстрее"
      ]
    },
    {
      "Title": "Зачем нужен транслятор в программировании?",
      "Answers": [
        "Чтобы компьютер понял код программы",
        "Чтобы писать текстовые документы",
        "Чтобы открывать файлы",
        "Чтобы загружать музыку",
        "Чтобы работать с картинками"
      ]
    },
    {
      "Title": "Что такое транслятор?",
      "Answers": [
        "Программа, переводящая код на язык машины",
        "Устройство для передачи данных",
        "Язык программирования",
        "Файл с кодом программы",
        "Операционная система"
      ]
    },
    {
      "Title": "Для чего нужен транслятор?",
      "Answers": [
        "Чтобы компьютер понял код программы",
        "Чтобы рисовать картинки",
        "Чтобы играть в игры",
        "Чтобы выключать компьютер",
        "Чтобы писать текст"
      ]
    },
    {
      "Title": "Какие бывают трансляторы?",
      "Answers": [
        "Компилятор и интерпретатор",
        "Диспетчер и регистратор",
        "Браузер и антивирус",
        "Видеокарта и процессор",
        "Драйвер и библиотека"
      ]
    },
    {
      "Title": "Что делает компилятор?",
      "Answers": [
        "Переводит код перед запуском",
        "Исполняет код сразу, строка за строкой",
        "Проверяет орфографию в тексте",
        "Открывает файлы",
        "Работает с картинками"
      ]
    },
    {
      "Title": "Что делает интерпретатор?",
      "Answers": [
        "Переводит код во время выполнения программы",
        "Создает исполняемый файл перед запуском",
        "Проверяет код на ошибки",
        "Управляет памятью компьютера",
        "Ускоряет интернет"
      ]
    },
    {
      "Title": "Какой язык понимает компьютер?",
      "Answers": [
        "Машинный код",
        "Английский",
        "Python",
        "Java",
        "HTML"
      ]
    },
    {
      "Title": "Почему программисты не пишут сразу на машинном языке?",
      "Answers": [
        "Он сложный для понимания",
        "Компьютеры его не понимают",
        "Он слишком быстрый",
        "Он похож на русский язык",
        "Он не работает на Windows"
      ]
    },
    {
      "Title": "Как переводится программа в машинный код?",
      "Answers": [
        "С помощью компилятора или интерпретатора",
        "Автоматически, без программ",
        "Только вручную",
        "С помощью текстового редактора",
        "Через интернет"
      ]
    },
    {
      "Title": "Что быстрее: компилятор или интерпретатор?",
      "Answers": [
        "Компилятор",
        "Интерпретатор",
        "Оба одинаково",
        "Зависит от компьютера",
        "Ни один не нужен"
      ]
    },
    {
      "Title": "Какой язык программирования использует компилятор?",
      "Answers": [
        "C++",
        "Python",
        "JavaScript",
        "HTML",
        "SQL"
      ]
    },
    {
      "Title": "Какой язык программирования использует интерпретатор?",
      "Answers": [
        "Python",
        "C++",
        "Java",
        "C",
        "Rust"
      ]
    },
    {
      "Title": "Что получается после работы компилятора?",
      "Answers": [
        "Исполняемый файл",
        "Текстовый документ",
        "Графический интерфейс",
        "Ошибка",
        "Таблица"
      ]
    },
    {
      "Title": "Что происходит, если в программе есть ошибка?",
      "Answers": [
        "Компилятор выдаст сообщение об ошибке",
        "Компьютер выключится",
        "Программа все равно запустится",
        "Ничего, ошибки не влияют на код",
        "Программа автоматически исправит ошибку"
      ]
    },
    {
      "Title": "Можно ли исправить ошибки перед запуском программы?",
      "Answers": [
        "Да, можно исправить код",
        "Нет, ошибки исправляются только после запуска",
        "Компьютер исправляет их сам",
        "Ошибки нельзя исправлять",
        "Ошибки появляются только в играх"
      ]
    },
    {
      "Title": "Почему Python называют интерпретируемым языком?",
      "Answers": [
        "Его код выполняется во время работы",
        "Он очень быстрый",
        "Он компилируется перед запуском",
        "Он не требует интерпретатора",
        "Он используется только для веб-разработки"
      ]
    },
    {
      "Title": "Почему C++ называют компилируемым языком?",
      "Answers": [
        "Его код переводится в машинный язык",
        "Он выполняется строка за строкой",
        "Он не требует компиляции",
        "Он работает только в браузере",
        "Он не поддерживает переменные"
      ]
    },
    {
      "Title": "Что делает JIT-компилятор?",
      "Answers": [
        "Переводит код во время выполнения программы",
        "Компилирует код перед запуском программы",
        "Проверяет ошибки в тексте",
        "Работает только в Python",
        "Устанавливает обновления"
      ]
    },
    {
      "Title": "Как называется программа, которая выполняет байт-код?",
      "Answers": [
        "Виртуальная машина",
        "Антивирус",
        "Текстовый редактор",
        "Диспетчер задач",
        "Видеокарта"
      ]
    },
    {
      "Title": "Что происходит, если компилятор находит ошибку?",
      "Answers": [
        "Программа не запустится",
        "Компьютер выключится",
        "Ошибка исправится автоматически",
        "Код сработает, но неправильно",
        "Код станет быстрее"
      ]
    },
    {
      "Title": "Зачем нужен транслятор в программировании?",
      "Answers": [
        "Чтобы компьютер понял код программы",
        "Чтобы писать текстовые документы",
        "Чтобы открывать файлы",
        "Чтобы загружать музыку",
        "Чтобы работать с картинками"
      ]
    },
    {
      "Title": "Какой язык программирования считается одним из самых популярных в 2025 году?",
      "Answers": [
        "Python",
        "Pascal",
        "COBOL",
        "Fortran",
        "Lisp"
      ]
    },
    {
      "Title": "Какой язык программирования чаще всего используется в веб-разработке?",
      "Answers": [
        "JavaScript",
        "C++",
        "Kotlin",
        "Swift",
        "Lua"
      ]
    },
    {
      "Title": "Какой язык программирования разработан специально для платформы iOS?",
      "Answers": [
        "Swift",
        "C#",
        "Python",
        "PHP",
        "Rust"
      ]
    },
    {
      "Title": "Какой язык программирования является основным для разработки Android-приложений?",
      "Answers": [
        "Kotlin",
        "Swift",
        "JavaScript",
        "Ruby",
        "Go"
      ]
    },
    {
      "Title": "Какой язык программирования активно используется в разработке игр?",
      "Answers": [
        "C#",
        "HTML",
        "SQL",
        "TypeScript",
        "PHP"
      ]
    },
    {
      "Title": "Какой язык программирования считается наиболее удобным для работы с искусственным интеллектом?",
      "Answers": [
        "Python",
        "C",
        "PHP",
        "Lua",
        "Swift"
      ]
    },
    {
      "Title": "Какой язык программирования был разработан компанией Google?",
      "Answers": [
        "Go",
        "Rust",
        "Ruby",
        "Java",
        "Fortran"
      ]
    },
    {
      "Title": "Какой язык программирования применяется в разработке бэкенда крупных веб-сервисов?",
      "Answers": [
        "Java",
        "HTML",
        "CSS",
        "Markdown",
        "JSON"
      ]
    },
    {
      "Title": "Какой язык программирования чаще всего используется для создания серверных API?",
      "Answers": [
        "JavaScript",
        "C++",
        "Delphi",
        "Pascal",
        "Scratch"
      ]
    },
    {
      "Title": "Какой язык программирования часто применяется для работы с базами данных?",
      "Answers": [
        "SQL",
        "Swift",
        "Perl",
        "Assembly",
        "Haskell"
      ]
    },
    {
      "Title": "Какой язык программирования создан для разработки безопасных и быстрых приложений?",
      "Answers": [
        "Rust",
        "PHP",
        "Visual Basic",
        "Bash",
        "Lisp"
      ]
    },
    {
      "Title": "Какой язык программирования чаще всего используется для написания скриптов автоматизации?",
      "Answers": [
        "Python",
        "C++",
        "Kotlin",
        "Java",
        "Ruby"
      ]
    },
    {
      "Title": "Какой язык программирования является кроссплатформенным и активно используется в мобильной разработке?",
      "Answers": [
        "Dart",
        "Fortran",
        "Perl",
        "Prolog",
        "Basic"
      ]
    },
    {
      "Title": "Какой язык программирования ориентирован на функциональное программирование?",
      "Answers": [
        "Haskell",
        "PHP",
        "CSS",
        "Pascal",
        "Lua"
      ]
    },
    {
      "Title": "Какой язык программирования является основным для разработки в среде .NET?",
      "Answers": [
        "C#",
        "Python",
        "JavaScript",
        "Swift",
        "Go"
      ]
    },
    {
      "Title": "Какой язык программирования чаще всего используется для написания браузерных расширений?",
      "Answers": [
        "JavaScript",
        "C++",
        "Java",
        "SQL",
        "Delphi"
      ]
    },
    {
      "Title": "Какой язык программирования считается одним из самых простых для начинающих разработчиков?",
      "Answers": [
        "Python",
        "C",
        "Rust",
        "Perl",
        "Lisp"
      ]
    },
    {
      "Title": "Какой язык программирования активно используется в блокчейн-разработке?",
      "Answers": [
        "Solidity",
        "HTML",
        "SQL",
        "Ruby",
        "Scratch"
      ]
    },
    {
      "Title": "Какой язык программирования используется для написания микросервисов?",
      "Answers": [
        "Go",
        "Assembly",
        "Pascal",
        "Perl",
        "JavaFX"
      ]
    },
    {
      "Title": "Какой язык программирования является современным и активно развивается для работы с большими данными?",
      "Answers": [
        "Scala",
        "PHP",
        "Ruby",
        "Objective-C",
        "Lua"
      ]
    },
    {
      "Title": "Как называется совокупность точно заданных правил решения некоторого класса задач?",
      "Answers": [
        "Алгоритм",
        "Процесс",
        "Формула",
        "Цикл",
        "Блок"
      ]
    },
    {
      "Title": "Как называется алгоритм который задаёт определённые действия, обозначая их в единственной и достоверной последовательности?",
      "Answers": [
        "Механический",
        "Гибкий",
        "Эвристический",
        "Вероятностный",
        "Вспомогательный"
      ]
    },
    {
      "Title": "Как называется алгоритм который задает действия , обозначая их во множестве вариаций ?",
      "Answers": [
        "Гибкий",
        "Механический",
        "Вспомогательный",
        "Линейный",
        "Вероятностный"
      ]
    },
    {
      "Title": "Как называется алгоритм который выполняет действия последовательно друг за другом?",
      "Answers": [
        "Линейный",
        "Разветвлённый",
        "Вероятностный",
        "Гибкий",
        "Механический"
      ]
    },
    {
      "Title": "Как называется алгоритм предусматривающий многократное выполнение определённых действий?",
      "Answers": [
        "Циклический",
        "Развлетвлённый",
        "Вероятностный",
        "Гибкий",
        "Вспомогательный"
      ]
    },
    {
      "Title": "Какое свойство алгоритма должно представлять процесс решения задачи как упорядоченное выполнение некоторых простых шагов?",
      "Answers": [
        "Дискретность",
        "Детерминированность",
        "Понятность",
        "Конечность",
        "Массовость"
      ]
    },
    {
      "Title": "Какое свойство алгоритма выдаёт один и тот же результат (ответ) для одних и тех же исходных данных?",
      "Answers": [
        "Детерминированность",
        "Дисктерность",
        "Массовость",
        "Результативность",
        "Понятность"
      ]
    },
    {
      "Title": "Какое свойство алгоритма обозначает что алгоритм должен включать только те команды, которые доступны исполнителю и входят в его систему команд?",
      "Answers": [
        "Понятность",
        "Результативность",
        "Массовость",
        "Дискретность",
        "Детерминированность"
      ]
    },
    {
      "Title": "Какое свойство алгоритма обозначает что при заданных начальных данных алгоритм должен завершать работу и выдавать результат за определённое число шагов",
      "Answers": [
        "Конечность",
        "Детерминированность",
        "Результативность",
        "Массовость",
        "Понятность"
      ]
    },
    {
      "Title": "Как называется алгоритм использующий псевдослучайный набор чисел, для получение конкретного результата с известной вероятностью неверного исхода?",
      "Answers": [
        "Вероятностный",
        "Нормальный",
        "Регистровый",
        "Циклический",
        "Детерминированный"
      ]
    },
    {
      "Title": "Как называется вид вероятностного алгоритма, суть которого в выполнении нескольких вероятностных последовательностей, до тех пор пока их результаты не совпадут?",
      "Answers": [
        "Лас-Вегас",
        "Монте-Карло",
        "Алгорифм",
        "Алгоритм Маркова",
        "Тьюринг"
      ]
    },
    {
      "Title": "Как называется вид алгоритма применяющего систему последовательных применений подстановок?",
      "Answers": [
        "Алгоритм Маркова",
        "Стохастический",
        "Лас-Вегас",
        "Лондон",
        "Клеточный Автомат"
      ]
    },
    {
      "Title": "Как называется вид алгоритма который дает неправильный результат с заранее известной вероятность?",
      "Answers": [
        "Монте-Карло",
        "Алгоритм Маркова",
        "Клеточный автомат",
        "Блок-схема",
        "Алгоритм Евклида"
      ]
    },
    {
      "Title": "Как называется алгоритм/процесс суть которого во множественном повторений самого себя до получения конечного результата?",
      "Answers": [
        "Рекурсивный",
        "Клеточный",
        "Евклидовый",
        "Стохастический",
        "Линейный"
      ]
    },
    {
      "Title": "Как называется понятие определяющее свойства алгоритма ко всему диапазону входных данных?",
      "Answers": [
        "Корректность",
        "Успешность",
        "Вероятность",
        "Ошибочность",
        "Завершенность"
      ]
    },
    {
      "Title": "Как называется Корректность алгоритма дающее правильный результат в случае завершения?",
      "Answers": [
        "Частичная",
        "Полная",
        "Формальная",
        "Правильная",
        "Асимптотическая"
      ]
    },
    {
      "Title": "Какой вид алгоритма так же называют \"детерминированным\", \"жестким\"?",
      "Answers": [
        "Механический",
        "Гибкий",
        "Эвристический",
        "Линейный",
        "Вспомогательный"
      ]
    },
    {
      "Title": "Название какого вида алгоритма происходит от греческого слова \"Открывать, Искать\"?",
      "Answers": [
        "Эвристический",
        "Стохастический",
        "Детерминированный",
        "Процедурный",
        "Рекурсивный"
      ]
    },
    {
      "Title": "Как называется графическое изображение алгоритма в виде схемы связанных между стрелок, блоков?",
      "Answers": [
        "Блок-схема",
        "Чертёж",
        "Блок",
        "Блок-граф",
        "Чертёж-схема"
      ]
    },
    {
      "Title": "Как называется алгоритм используемый при алгоритмизации конкретной задачи?",
      "Answers": [
        "Вспомогательный",
        "Циклический",
        "Эвристический",
        "Вероятностный",
        "Гибкий"
      ]
    },
    {
      "Title": "Кто разработал язык программирования C++?",
      "Answers": [
        "Бьёрн Страуструп",
        "Деннис Ритчи",
        "Джеймс Гослинг",
        "Гвидо ван Россум",
        "Ларри Уолл"
      ]
    },
    {
      "Title": "Какой язык программирования является основой для C++?",
      "Answers": [
        "C",
        "Java",
        "Python",
        "Swift",
        "Ruby"
      ]
    },
    {
      "Title": "В каком году появился язык программирования C++?",
      "Answers": [
        "1983",
        "1970",
        "1995",
        "2001",
        "2010"
      ]
    },
    {
      "Title": "Какой оператор используется для вывода данных на экран в C++?",
      "Answers": [
        "cout",
        "print",
        "echo",
        "out",
        "display"
      ]
    },
    {
      "Title": "Какой оператор используется для ввода данных с клавиатуры в C++?",
      "Answers": [
        "cin",
        "input",
        "scan",
        "read",
        "get"
      ]
    },
    {
      "Title": "Какой заголовочный файл необходим для работы с вводом и выводом в C++?",
      "Answers": [
        "iostream",
        "stdio.h",
        "conio.h",
        "math.h",
        "string.h"
      ]
    },
    {
      "Title": "Какой символ указывает на конец строки кода в C++?",
      "Answers": [
        ";",
        ":",
        ".",
        ",",
        "!"
      ]
    },
    {
      "Title": "Какой ключевой оператор используется для объявления переменной целого типа в C++?",
      "Answers": [
        "int",
        "float",
        "double",
        "char",
        "bool"
      ]
    },
    {
      "Title": "Какой тип данных используется для хранения дробных чисел в C++?",
      "Answers": [
        "float",
        "int",
        "char",
        "bool",
        "string"
      ]
    },
    {
      "Title": "Какой символ используется для обозначения комментария в одной строке в C++?",
      "Answers": [
        "//",
        "#",
        "--",
        "%",
        "\\"
      ]
    },
    {
      "Title": "Какой цикл используется в C++ для многократного выполнения блока кода с условием проверки в начале?",
      "Answers": [
        "while",
        "do-while",
        "for",
        "switch",
        "case"
      ]
    },
    {
      "Title": "Какой оператор используется для создания условных конструкций в C++?",
      "Answers": [
        "if",
        "switch",
        "case",
        "try",
        "loop"
      ]
    },
    {
      "Title": "Как объявить функцию в C++?",
      "Answers": [
        "returnType functionName(param)",
        "function functionName()",
        "def functionName()",
        "sub functionName()",
        "var functionName()"
      ]
    },
    {
      "Title": "Какой метод используется для динамического выделения памяти в C++?",
      "Answers": [
        "new",
        "malloc",
        "allocate",
        "create",
        "memalloc"
      ]
    },
    {
      "Title": "Какой метод используется для освобождения динамически выделенной памяти в C++?",
      "Answers": [
        "delete",
        "free",
        "remove",
        "clear",
        "destroy"
      ]
    },
    {
      "Title": "Какой модификатор доступа делает член класса доступным только внутри самого класса?",
      "Answers": [
        "private",
        "public",
        "protected",
        "static",
        "global"
      ]
    },
    {
      "Title": "Как называется механизм в C++, позволяющий создавать классы на основе других классов?",
      "Answers": [
        "Наследование",
        "Полиморфизм",
        "Инкапсуляция",
        "Композиция",
        "Абстракция"
      ]
    },
    {
      "Title": "Какой ключевой оператор используется для работы с указателями в C++?",
      "Answers": [
        "*",
        "&",
        "->",
        "$",
        "@"
      ]
    },
    {
      "Title": "Как называется процесс преобразования объекта базового класса в объект производного класса?",
      "Answers": [
        "Восходящее преобразование",
        "Нисходящее преобразование",
        "Полиморфизм",
        "Абстракция",
        "Динамическое связывание"
      ]
    },
    {
      "Title": "Какой стандарт C++ является самым последним на 2025 год?",
      "Answers": [
        "C++23",
        "C++11",
        "C++98",
        "C++03",
        "C++14"
      ]
    },
    {
      "Title": "Как называется вид инициализации с использованием оператора присваивания в C++?",
      "Answers": [
        "Нотация присваивания",
        "Функциональная нотация",
        "Фигурная инициализация",
        "Литеральное присваивание",
        "Фактическая нотация"
      ]
    },
    {
      "Title": "Как называется вид инициализации с использованием круглых скобок в C++?",
      "Answers": [
        "Функциональная нотация",
        "Нотация присваивания",
        "Фигурная инициализация",
        "Литеральное присваивание",
        "Фактическая нотация"
      ]
    },
    {
      "Title": "Как называется вид инициализации с использованием фигурных скобок в C++?",
      "Answers": [
        "Фигурная инициализация",
        "Функциональная нотация",
        "Нотация присваивания",
        "Литеральное присваивание",
        "Фактическая нотация"
      ]
    },
    {
      "Title": "Как называется Тип содержащий одно значение определённого диапазона в C++?",
      "Answers": [
        "Скалярный",
        "Составной",
        "Переменный",
        "Константный",
        "Встроенный"
      ]
    },
    {
      "Title": "Как называется Тип содержащий более одного значения в C++?",
      "Answers": [
        "Составной",
        "Скалярный",
        "Переменный",
        "Константный",
        "Встроенный"
      ]
    },
    {
      "Title": "Как ещё называют Встроенные типы в C++?",
      "Answers": [
        "Фундаментальные",
        "Базовые",
        "Исключительные",
        "Первообразные",
        "Переменные"
      ]
    },
    {
      "Tags": [
        "В задании есть ошибка"
      ],
      "Title": "Какой тип данных хранит только положительные числовые значения в С++?",
      "Answers": [
        "char",
        "signed char",
        "short",
        "long long",
        "unsigned long long"
      ]
    },
    {
      "Title": "Какой целочисленный литерал представлен в десятичной системе исчисления в C++?",
      "Answers": [
        "long num { -9534234234 }",
        "int num{ 034 }",
        "int num ( 0b11010 ) ",
        "unsigned int num = 0b1100_0000",
        "unsigned int num = 0B01U"
      ]
    },
    {
      "Tags": [
        "В задании есть ошибка"
      ],
      "Title": "Какой целочисленный литерал представлен в восьмеричной системе исчисления в C++?",
      "Answers": [
        "long num { 0377L }",
        "long long num = 377L ",
        "long num ( 0c377L )",
        "long num { 0377L }",
        "unsigned long num3{ 0xFFFFFFULL }"
      ]
    },
    {
      "Title": "Какой целочисленный литерал представлен в шестнадцатеричной системе исчисления в C++?",
      "Answers": [
        "unsigned long num3{ 0xFFFFFFULL }",
        "long num { 0377L }",
        "long long num = 377L ",
        "int num{ 034 }",
        "int num ( 0b11010 ) "
      ]
    },
    {
      "Title": "Для использование какой системы исчисления в C++ используется префикс \"0х\"?",
      "Answers": [
        "Шестнадцатеричной",
        "Десятичной",
        "Восьмеричной",
        "Двоичной",
        "Бинарной"
      ]
    },
    {
      "Title": "Для использование какой системы исчисления в C++ используется префикс \"0\"?",
      "Answers": [
        "Восьмеричной",
        "Двоичной",
        "Шестнадцатеричной",
        "Десятичной",
        "Троичной"
      ]
    },
    {
      "Title": "Для использование какой системы исчисления в C++ используется префикс \"0b\"?",
      "Answers": [
        "Двоичной",
        "Восьмеричной",
        "Шестнадцатеричной",
        "Десятичной",
        "Троичной"
      ]
    },
    {
      "Title": "Сколько бит выделенно для Мантиссы в числовом типе \"double\" в C++?",
      "Answers": [
        "52",
        "64",
        "32",
        "12",
        "36"
      ]
    },
    {
      "Title": "Чему равно число 3.650000E02 в базовом представлении в C++?",
      "Answers": [
        "365",
        "0.365",
        "-0.365",
        "3.65",
        "0.0000000365"
      ]
    },
    {
      "Title": "Сколько БАЙТ занимает вещественной число одинарной точности c плавающей точкой в C++?",
      "Answers": [
        "4",
        "6",
        "8",
        "32",
        "64"
      ]
    },
    {
      "Title": "Сколько БИТ занимает вещественной число двойной точности c плавающей точкой в C++?",
      "Answers": [
        "64",
        "32",
        "128",
        "4",
        "8"
      ]
    },
    {
      "Title": "Сколько бит выделенно для Мантиссы в числовом типе \"float\" в C++?",
      "Answers": [
        "23",
        "16",
        "32",
        "56",
        "128"
      ]
    },
    {
      "Title": "В какой кодировке представлен символьный тип \"char\" в C++?",
      "Answers": [
        "ASCII",
        "UTF-32",
        "UTF-8",
        "UTF-16",
        "Unicode"
      ]
    },
    {
      "Title": "Каким ключевым словом можно предоставить компилятору самому вывести тип переменной в C++?",
      "Answers": [
        "auto",
        "let",
        "var",
        "decide",
        "any"
      ]
    },
    {
      "Title": "Какой тип данных используется для хранения целых чисел в C++?",
      "Answers": [
        "Int",
        "Float",
        "Char",
        "Bool",
        "Double "
      ]
    },
    {
      "Title": "Какой оператор используется для получения остатка от деления?",
      "Answers": [
        "%",
        "/",
        "//",
        "*",
        "+"
      ]
    },
    {
      "Title": "Какой тип данных предназначен для хранения одиночного символа?",
      "Answers": [
        "Char",
        "String",
        "Vchar_t",
        "Bool",
        "Int"
      ]
    },
    {
      "Title": "Какой оператор используется для логического сравнения",
      "Answers": [
        "&&",
        "||",
        "&",
        "|",
        "!"
      ]
    },
    {
      "Title": "Какой из этих типов данных занимает наименьшее количество памяти?",
      "Answers": [
        "Bool",
        "Int",
        "Float",
        "Double",
        "Long long"
      ]
    },
    {
      "Title": "Какой оператор используется для разыменования указателя?",
      "Answers": [
        "*",
        "&",
        "->",
        ".",
        "::"
      ]
    },
    {
      "Title": "Какой оператор отвечает за логическое \"НЕ\"?",
      "Answers": [
        "!",
        "~",
        "!=",
        "?",
        "=="
      ]
    },
    {
      "Title": "Какой оператор используется для выделения памяти под объект в C++?",
      "Answers": [
        "New",
        "Malloc",
        "Alloc",
        "Create",
        "Make"
      ]
    },
    {
      "Title": "Какой из операторов используется для перегрузки вывода в поток cout?",
      "Answers": [
        "<<",
        ">>",
        "=",
        "->",
        "&"
      ]
    },
    {
      "Title": "Какой оператор используется для сравнения двух значений?",
      "Answers": [
        "==",
        "=",
        "!=",
        "<",
        ">"
      ]
    },
    {
      "Title": "Какой тип данных используется для хранения вещественных чисел?",
      "Answers": [
        "Double",
        "Int",
        "Char",
        "Boool",
        "Void"
      ]
    },
    {
      "Title": "Какой оператор выполняет побитовое \"И\"?",
      "Answers": [
        "&",
        "& &",
        "|",
        "||",
        "^"
      ]
    },
    {
      "Title": "Какой оператор используется для приведения типов в стиле C++?",
      "Answers": [
        "Static_cast<>",
        "(int)",
        "Dynamic_cast<>",
        "Reinterpret_cast<>",
        "Const_cast<>"
      ]
    },
    {
      "Title": "Какой оператор используется для побитового \"ИЛИ\"?",
      "Answers": [
        "|",
        "| |",
        "&",
        "&&",
        "^"
      ]
    },
    {
      "Title": "Какой оператор позволяет узнать размер типа или переменной?",
      "Answers": [
        "Sizeof",
        "Typeid",
        "Length ",
        "Size",
        "Capacity"
      ]
    },
    {
      "Title": "Какой оператор используется для удаления динамически выделенной памяти?",
      "Answers": [
        "Delete",
        "Free",
        "Remove",
        "Clear",
        "Destroy"
      ]
    },
    {
      "Title": "Какой оператор позволяет работать с членами структуры через указатель?",
      "Answers": [
        "->",
        ".",
        "::",
        "*",
        "&"
      ]
    },
    {
      "Title": "Какой тип данных используется для представления логических значений?",
      "Answers": [
        "Bool",
        "Int",
        "Bit",
        "Char",
        "Void"
      ]
    },
    {
      "Title": "Какой оператор используется для поразрядного исключающего \"ИЛИ\"?",
      "Answers": [
        "^",
        "&",
        "|",
        "||",
        "&&"
      ]
    },
    {
      "Title": "Какой тип данных нужен для хранения больших целых чисел?",
      "Answers": [
        "Long long",
        "Int",
        "Short",
        "Char",
        "Bool"
      ]
    }
  ]
}